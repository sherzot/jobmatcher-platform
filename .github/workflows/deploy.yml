name: Build and Deploy Services

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: sherdev/jobmatcher

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          
      - name: Test auth-service
        run: |
          cd backend/auth-service
          go mod tidy
          go test ./...
          
      - name: Test job-service
        run: |
          cd backend/job-service
          go mod tidy
          go test ./...
          
      - name: Test resume-service
        run: |
          cd backend/resume-service
          go mod tidy
          go test ./...

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.auth
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:auth-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push job-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.job
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:job-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push resume-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.resume
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:resume-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push pdf-worker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.pdfworker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pdf-worker-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push parser-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.parser
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:parser-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push admin-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.admin
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:admin-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push agent-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.agent
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:agent-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push company-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.company
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:company-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push offer-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.offer
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:offer-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Frontend build removed to fix npm ci errors
