name: Build and Deploy Services

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: sherdev/jobmatcher

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Test parser-service
        run: |
          cd backend/parser-service
          go mod tidy
          go test ./...

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: |
            frontend/web/package-lock.json
            frontend/admin/package-lock.json
            frontend/agent/package-lock.json

      - name: Test web frontend
        working-directory: ./frontend/web
        run: |
          echo "=== Testing web frontend ==="
          echo "Working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json
          echo "Installing dependencies..."
          npm ci --cache .npm-cache --verbose
          echo "Building application..."
          npm run build
          echo "Build completed successfully!"

      - name: Test admin frontend
        working-directory: ./frontend/admin
        run: |
          echo "=== Testing admin frontend ==="
          echo "Working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json
          echo "Installing dependencies..."
          npm ci --cache .npm-cache --verbose
          echo "Building application..."
          npm run build
          echo "Build completed successfully!"

      - name: Test agent frontend
        working-directory: ./frontend/agent
        run: |
          echo "=== Testing agent frontend ==="
          echo "Working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json
          echo "Installing dependencies..."
          npm ci --cache .npm-cache --verbose
          echo "Building application..."
          npm run build
          echo "Build completed successfully!"

  build-and-push:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Docker secrets
        run: |
          echo "Checking Docker secrets availability..."
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "Docker secrets are not properly configured"
            exit 1
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Backend Services
      - name: Build and push parser-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.parser
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:parser-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push admin-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.admin
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:admin-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push agent-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.agent
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:agent-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push company-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.company
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:company-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push job-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.job
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:job-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push offer-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.offer
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:offer-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push resume-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.resume
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:resume-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push pdf-worker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.pdfworker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pdf-worker-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.auth
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:auth-service-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Frontend Services
      - name: Build and push web-frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:web-frontend-latest
          build-args: |
            FRONTEND_TYPE=web
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push admin-frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:admin-frontend-latest
          build-args: |
            FRONTEND_TYPE=admin
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push agent-frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:agent-frontend-latest
          build-args: |
            FRONTEND_TYPE=agent
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "All services built and pushed successfully!"
          echo "Ready for deployment to production environment"
